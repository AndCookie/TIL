package third;
// singleton pattern : 객체를 전체 프로젝트 내에서 하나 밖에 못만드는 것
// 1.  생성자는 private : 외부에서 new로 생성 불가능하며 연결을 잇고 끊는 작업만 수행
// 2.  멤버들은 static final
// 객체를 전체 프로젝트 내에서

public class ConnectionManager {
	
	// 특징 2
	private static final String url = "jdbc:oracle:thin:@localhost:1521:xe";
	private static final String driver = "oracle.jdbc.driver.OracleDriver";
	private static final String userid = "hr";
	private static final String userpw = "hr";
	
	// 특징 1
	private ConncetionManager() {};
	// private 생성자로 만들어서 다른 곳에서 new로 못쓰게 막아버린 것
	
	// static블럭을 이용하여 static 멤버를 메모리에 로딩함
	// static블럭이란? : static {}의 구조로 생겼으며 그것을 다루기 위해 생성자 대신 만든 장치
	static {
		
	}
}
